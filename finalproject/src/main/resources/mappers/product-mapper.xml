<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="productMapper">
<!-- Product -->
<resultMap type="product" id="productResult">
	<result column="PRODUCT_NO" property="productNo"/>
	<result column="CATEGORY_NAME" property="category"/>
	<result column="TYPE_NAME" property="type"/>
	<result column="BRAND_NAME" property="brand"/>
	<result column="MODEL_NAME" property="model"/>
	<result column="PRODUCT_COLOR" property="color"/>
	<result column="PRODUCT_NAME" property="name"/>
	<result column="PRODUCT_CONTENT" property="content"/>
	<result column="PRODUCT_PRICE" property="price"/>
	<result column="PRODUCT_QUANTITY" property="quantity"/>
	<result column="STATUS" property="status"/>
	<result column="RATING" property="rating"/>
	<result column="COUNT" property="count"/>
	<result column="CHANGE_NAME" property="changeName"/>
	<result column="FILE_PATH" property="filePath"/>
</resultMap>
<!-- ProductAttachment -->
<resultMap type="productAttachment" id="productAttachmentResult">
	<result column="PRODUCT_ATTACHMENT_NO" property="attachmentNo"/>
	<result column="REF_PRODUCT_NO" property="productNo"/>
	<result column="PRODUCT_ATTACHMENT_ORIGIN_NAME" property="originName"/>
	<result column="PRODUCT_ATTACHMENT_CHANGE_NAME" property="changeName"/>
	<result column="PRODUCT_ATTACHMENT_FILE_PATH" property="filePath"/>
</resultMap>

<select id="listCount" resultType="_int" parameterType="filter">
	SELECT COUNT(*)
	FROM PRODUCT P
	JOIN MODEL M ON(P.REF_MODEL_NO = M.MODEL_NO)
	JOIN PRICE ON(P.PRODUCT_PRICE BETWEEN PRICE_MIN AND PRICE_MAX)
	WHERE P.STATUS LIKE 'Y'
	AND M.STATUS LIKE 'Y'
        AND P.REF_TYPE_NO LIKE #{typeNo}
        <if test="brandNo != 0">
	        AND M.REF_BRAND_NO LIKE #{brandNo}
        </if>
        <if test="modelNo != null">
	        AND P.REF_MODEL_NO IN
			<foreach collection="modelNo" item="modelNo" open="(" close=")" separator=",">
				#{modelNo}
			</foreach>
        </if>
        <if test="priceNo != null">
	        AND PRICE_NO IN 
			<foreach collection="priceNo" item="priceNo" open="(" close=")" separator=",">
				#{priceNo}
			</foreach>
        </if>
</select>

<select id="productList" parameterType="filter" resultMap="productResult">
	SELECT
		P.PRODUCT_NO,
		B.BRAND_NAME,
		P.PRODUCT_NAME,
		P.PRODUCT_PRICE,
		PAT.PRODUCT_ATTACHMENT_FILE_PATH FILE_PATH,
		PAT.PRODUCT_ATTACHMENT_CHANGE_NAME CHANGE_NAME,
		NVL(AVG(R.RATING),0) RATING,
		COUNT(R.REVIEW_NO) COUNT
	FROM
	    PRODUCT P
	    JOIN PRODUCT_ATTACHMENT PAT ON ( P.PRODUCT_NO = PAT.REF_PRODUCT_NO )
	    JOIN PRICE PRI ON(P.PRODUCT_PRICE BETWEEN PRI.PRICE_MIN AND PRI.PRICE_MAX)
	    JOIN MODEL M ON ( P.REF_MODEL_NO = M.MODEL_NO )
	    JOIN BRAND B ON ( M.REF_BRAND_NO = B.BRAND_NO )
	    LEFT JOIN REVIEW R ON( P.PRODUCT_NO = R.REF_PRODUCT_NO )
	WHERE P.STATUS LIKE 'Y'
	    AND PAT.PRODUCT_ATTACHMENT_CHANGE_NAME LIKE '%1.%'
	    AND ( R.REVIEW_NO IS NULL OR R.STATUS LIKE 'Y' )
	    AND P.REF_TYPE_NO LIKE #{typeNo}
        <if test="brandNo != 0">
	        AND M.REF_BRAND_NO LIKE #{brandNo}
        </if>
        <if test="modelNo != null">
	        AND P.REF_MODEL_NO IN
			<foreach collection="modelNo" item="modelNo" open="(" close=")" separator=",">
				#{modelNo}
			</foreach>
        </if>
        <if test="priceNo != null">
	        AND PRICE_NO IN 
			<foreach collection="priceNo" item="priceNo" open="(" close=")" separator=",">
				#{priceNo}
			</foreach>
        </if>
	GROUP BY
		P.PRODUCT_NO, 
		B.BRAND_NAME, 
		P.PRODUCT_NAME, 
		P.PRODUCT_PRICE, 
		PAT.PRODUCT_ATTACHMENT_FILE_PATH, 
		PAT.PRODUCT_ATTACHMENT_CHANGE_NAME
		
	ORDER BY 
	<choose>
		<when test="sort == 2">
			COUNT DESC, RATING DESC
		</when>
		<when test="sort == 3">
			RATING DESC, COUNT DESC
		</when>
		<when test="sort == 4">
			PRODUCT_PRICE DESC
		</when>
		<when test="sort == 5">
			PRODUCT_PRICE
		</when>
		<when test="sort == 6">
			PRODUCT_NO DESC
		</when>
		<when test="sort == 7">
			BRAND_NAME
		</when>
		<otherwise>
			PRODUCT_NO DESC
		</otherwise>
	</choose>
</select>

<select id="selectProductAttachmentList" resultMap="productAttachmentResult">
	SELECT
		REF_PRODUCT_NO ,
		PRODUCT_ATTACHMENT_ORIGIN_NAME ,
		PRODUCT_ATTACHMENT_CHANGE_NAME ,
		PRODUCT_ATTACHMENT_FILE_PATH 
	FROM PRODUCT_ATTACHMENT
	WHERE REF_PRODUCT_NO LIKE #{productNo}
	ORDER BY PRODUCT_ATTACHMENT_NO
</select>

<select id="productDetails" parameterType="product" resultMap="productResult">
SELECT
    product_no,
    model_name,
    brand_name,
    group_no,
    product_color,
    product_name,
    product_content,
    product_price,
    product_quantity,
    nvl(AVG(r.rating), 0),
    COUNT(r.review_no)
FROM
         product p
    JOIN model         m ON ( p.ref_model_no = m.model_no )
    JOIN brand         b ON ( m.ref_brand_no = b.brand_no )
    JOIN product_group g ON ( p.product_no = g.ref_product_no )
    LEFT JOIN review r ON ( p.product_no = r.ref_product_no )
WHERE
    product_no = #{productNo}
GROUP BY
    product_no,
    model_name,
    brand_name,
    group_no,
    product_color,
    product_name,
    product_content,
    product_price,
    product_quantity
</select>

<select id="productPics" resultMap="productAttachmentResult">
SELECT * FROM PRODUCT_ATTACHMENT WHERE REF_PRODUCT_NO = #{productNo}
</select>

<select id="productColors" resultMap="productAttachmentResult">
SELECT
    *
FROM
         product_attachment pat
    JOIN product       p ON ( pat.ref_product_no = p.product_no )
    JOIN product_group pg ON ( p.product_no = pg.ref_product_no )
WHERE
    pg.group_no LIKE (
        SELECT
            group_no
        FROM
            product_group
        WHERE
            ref_product_no LIKE #{productNo}
    )
    AND pat.product_attachment_change_name LIKE '%-1.%'
</select>










</mapper>
