<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">

	<!-- Product -->
	<resultMap type="product" id="productResult">
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="CATEGORY_NAME" property="category"/>
		<result column="TYPE_NAME" property="type"/>
		<result column="BRAND_NAME" property="brand"/>
		<result column="MODEL_NAME" property="model"/>
		<result column="PRODUCT_COLOR" property="color"/>
		<result column="PRODUCT_NAME" property="name"/>
		<result column="PRODUCT_CONTENT" property="content"/>
		<result column="PRODUCT_PRICE" property="price"/>
		<result column="PRODUCT_QUANTITY" property="quantity"/>
		<result column="STATUS" property="status"/>
		<result column="RATING" property="rating"/>
		<result column="COUNT" property="count"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="FILE_PATH" property="filePath"/>
	</resultMap>
	<!-- 제품 정보 입력 -->
	<insert id="addToProduct" parameterType="product">
		INSERT INTO PRODUCT(
		    PRODUCT_NO ,
		    REF_CATEGORY_NO ,
		    REF_TYPE_NO ,
		    REF_MODEL_NO ,
		    PRODUCT_COLOR ,
		    PRODUCT_NAME ,
		    PRODUCT_CONTENT ,
		    PRODUCT_PRICE ,
		    PRODUCT_QUANTITY 
		)
		VALUES(
		    SEQ_PRODUCT.NEXTVAL,
		    #{category},
		    #{type},
		    #{model},
		    #{color},
			#{name},
		    #{content},
		    #{price},
		    #{quantity}
		)
	</insert>
	<!-- 제품 이름 추가 -->
	<select id="groupName" parameterType="_int" resultType="String">
		SELECT MAX(PRODUCT_NAME)
		FROM PRODUCT P
		JOIN PRODUCT_GROUP PG ON(PG.REF_PRODUCT_NO = P.PRODUCT_NO)
		WHERE PG.GROUP_NO LIKE #{groupNo}
	</select>
	<!-- 제품 그룹 추가 -->
	
	<select id="addToGroup" parameterType="productGroup">
		INSERT INTO PRODUCT_GROUP(GROUP_NO, REF_PRODUCT_NO)
		VALUES(
			<choose>
				<when test="groupNo == 0">
					SEQ_PRODUCT_GROUP.NEXTVAL
				</when>
				<otherwise>
					#{productNo}
				</otherwise>
			</choose>
			,
			#{productNo}
		)
	</select>
	<!-- 제품 이미지 추가 -->
	<insert id="addToProductImage" parameterType="productAttachment">
		INSERT INTO PRODUCT_ATTACHMENT(
			PRODUCT_ATTACHMENT_NO ,
			REF_PRODUCT_NO ,
			PRODUCT_ATTACHMENT_ORIGIN_NAME ,
			PRODUCT_ATTACHMENT_CHANGE_NAME ,
			PRODUCT_ATTACHMENT_FILE_PATH)
		VALUES (
			(SEQ_PRODUCT_ATTACHMENT.NEXTVAL),
			#{productNo},
			#{originName},
			#{changeName},
			#{filePath}
		)
	</insert>

	<!-- 제품 정보 변경 -->
	<update id="changeToProduct" parameterType="product">
		UPDATE PRODUCT
		SET 
		<trim prefixOverrides=",">
			<if test="category != null">
				,REF_CATEGORY_NO = #{category}
			</if>
			<if test="type != null">
				,REF_TYPE_NO = #{type}
			</if>
			<if test="model != null">
				,REF_MODEL_NO = #{model}
			</if>
			<if test="color != null">
				,PRODUCT_COLOR = #{color}
			</if>
			<if test="name != null">
				,PRODUCT_NAME = #{name}
			</if>
			<if test="content != null">
				,PRODUCT_CONTENT = #{content}
			</if>
			<if test="price != 0">
				,PRODUCT_PRICE = #{price}
			</if>
		</trim>
		WHERE PRODUCT_NO LIKE #{productNo}
	</update>
	<!-- 제품 이미지 변경 -->
	<update id="changeToProductImage" parameterType="list">
		<foreach collection="list" item="productAttachment">
			UPDATE PRODUCT_ATTACHMENT
			SET PRODUCT_ATTACHMENT_ORIGIN_NAME = #{originName}
			, PRODUCT_ATTACHMENT_CHANGE_NAME = #{changeName}
			<if test="filePath != null">
				, PRODUCT_ATTACHMENT_FILE_PATH = #{filePath}
			</if>
			WHERE PRODUCT_ATTACHMENT_NO LIKE #{attachmentNo}
		</foreach>
	</update>
	<delete id="removerPoductImage">
		DELETE FROM PRODUCT_ATTACHMENT
		AND PRODUCT_ATTACHMENT_NO IN
		<foreach collection="list" item="attachmentNo" open="(" close=")" index="index" separator=",">
			#{attachmentNo}
		</foreach>
	</delete>
	<!-- 제품 등록 데이터 -->
	<select id="selectBrand" resultType="brand">
		SELECT
	    BRAND_NO as brandNo,
		BRAND_NAME as name
		FROM BRAND
		WHERE STATUS LIKE 'Y'   
	    ORDER BY BRAND_NO
	</select>
	<select id="selectModel" parameterType="_int" resultType="model">
		SELECT MODEL_NO AS modelNo,
		MODEL_NAME AS name,
		REF_BRAND_NO AS brandNo
		FROM MODEL
		WHERE STATUS LIKE 'Y'
		AND REF_BRAND_NO LIKE #{brandNo}
	    ORDER BY MODEL_NO
	</select>
	<!-- 브랜드 모델 추가 -->
	<insert id="addToBrand" parameterType="string">
		INSERT INTO BRAND(
			BRAND_NO, 
			BRAND_NAME
		) 
		VALUES(
			SEQ_BRAND.NEXTVAL, 
			#{brand}
		)
	</insert>
	<insert id="addToModel" parameterType="model">
		INSERT INTO MODEL(
			MODEL_NO ,
			MODEL_NAME ,
			REF_BRAND_NO
		)
		VALUES(
			SEQ_MODEL.NEXTVAL ,
			#{name},
			#{brandNo}
		)
	</insert>
	<!-- 브랜드 모델 수정 -->
	<update id="modiBrand" parameterType="brand">
		UPDATE BRAND
		SET BRAND_NAME = #{name}
		WHERE BRAND_NO LIKE #{brandNo}
	</update>
	<update id="modiModel" parameterType="model">
		UPDATE MODEL
		SET MODEL_NAME = #{name}
		WHERE MODEL_NO LIKE #{modelNo}
	</update>
	<!-- 현재 입력한 데이터 시퀀스 번호 -->
	<select id="selectSeqProduct" resultType="_int">
		SELECT SEQ_PRODUCT.CURRVAL FROM DUAL
	</select>
	<select id="selectSeqBrand" resultType="_int">
		SELECT SEQ_BRAND.CURRVAL FROM DUAL
	</select>
	<select id="selectSeqModel" resultType="_int">
		SELECT SEQ_MODEL.CURRVAL FROM DUAL
	</select>
	
	
	<update id="removeProduct" parameterType="_int">
		UPDATE PRODUCT
		SET STATUS = 'N'
		WHERE PRODUCT_NO LIKE #{productNo}
	</update>
	
	<update id="removeMember" parameterType="_int">
		UPDATE MEMBER
		SET STATUS = 'N'
		WHERE MEMBER_NO LIKE #{memberNo}
	</update>
	
	<update id="grandPoint" parameterType="member">
		UPDATE MEMBER
		SET POINT = POINT + #{point}
		WHERE MEMBER_NO LIKE #{memberNo}
	</update>
	
	<update id="modifyMemberGrade" parameterType="member">
		UPDATE MEMBER
		SET REF_GRADE_NO = #{gradeNo}
		WHERE MEMBER_NO LIKE #{memberNo}
	</update>
</mapper>
