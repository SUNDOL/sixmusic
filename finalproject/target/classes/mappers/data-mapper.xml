<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="dataMapper">
	<!-- brand -->
	<resultMap type="brand" id="brandResult">
		<result column="BRAND_NO" property="brandNo"/>
		<result column="BRAND_NAME" property="name"/>
		<result column="STATUS" property="status"/>
		<result column="QUANTITY" property="quantity"/>
	</resultMap>
	<!-- 
	typeNo
	modelNo
	priceNo
	 -->
	<select id="selectBrand" parameterType="filter" resultMap="brandResult">
        SELECT
			B.BRAND_NO ,
			B.BRAND_NAME ,
			COUNT(P.PRODUCT_NO) QUANTITY
		FROM PRODUCT P
        JOIN PRICE ON(P.PRODUCT_PRICE BETWEEN PRICE_MIN AND PRICE_MAX)
		JOIN MODEL M ON(P.REF_MODEL_NO = M.MODEL_NO)
        JOIN BRAND B ON(M.REF_BRAND_NO = B.BRAND_NO)
        WHERE B.STATUS LIKE 'Y'
        AND P.REF_TYPE_NO LIKE #{typeNo}
        <if test="brandNo != 0">
        	AND B.BRAND_NO LIKE #{brandNo}
        </if>
        <if test="modelNo != null">
        	AND P.REF_MODEL_NO IN
			<foreach collection="modelNo" item="modelNo" open="(" close=")" separator=",">
				#{modelNo}
			</foreach>
        </if>
        <if test="priceNo != null">
	        AND PRICE_NO IN 
			<foreach collection="priceNo" item="priceNo" open="(" close=")" separator=",">
				#{priceNo}
			</foreach>
        </if>
		GROUP BY 
			BRAND_NO ,
			BRAND_NAME
		ORDER BY QUANTITY DESC
	</select>
	<!-- model -->
	<resultMap type="model" id="modelResult">
		<result column="MODEL_NO" property="modelNo"/>
		<result column="MODEL_NAME" property="name"/>
		<result column="STATUS" property="status"/>
		<result column="QUANTITY" property="quantity"/>
	</resultMap>
	
	<!-- 
		typeNo
		brandNo
		modelNo
		priceNo
	 -->
	<select id="selectModel" parameterType="filter" resultMap="modelResult">
		SELECT
	        M.MODEL_NO ,
	        M.MODEL_NAME ,
	        COUNT(P.PRODUCT_NO) QUANTITY
		FROM MODEL M
        JOIN PRODUCT P ON(P.REF_MODEL_NO = M.MODEL_NO)
        JOIN PRICE ON(P.PRODUCT_PRICE BETWEEN PRICE_MIN AND PRICE_MAX)
        WHERE M.STATUS LIKE 'Y'
        AND P.REF_TYPE_NO LIKE #{typeNo}
        <if test="brandNo != 0">
	        AND M.REF_BRAND_NO LIKE #{brandNo}
        </if>
        <if test="modelNo != null">
	        AND P.REF_MODEL_NO IN
			<foreach collection="modelNo" item="modelNo" open="(" close=")" separator=",">
				#{modelNo}
			</foreach>
        </if>
        <if test="priceNo != null">
	        AND PRICE_NO IN 
			<foreach collection="priceNo" item="priceNo" open="(" close=")" separator=",">
				#{priceNo}
			</foreach>
        </if>
        GROUP BY 
	        M.MODEL_NO ,
	        M.MODEL_NAME 
        ORDER BY QUANTITY DESC
	</select>
	
	
	<!-- price -->
	<resultMap type="Price" id="priceResult">
		<result column="PRICE_NO" property="priceNo"/>
		<result column="PRICE_MIN" property="min"/>
		<result column="PRICE_MAX" property="max"/>
		<result column="QUANTITY" property="quantity"/>
	</resultMap>
	
	<!-- 
		typeNo
		brandNo
		modelNo
	 -->
	<select id="selectPrice" resultMap="priceResult">
		SELECT 
		    PRICE_NO ,
		    PRICE_MIN ,
			PRICE_MAX ,
		    COUNT(*) QUANTITY
		FROM PRICE
		JOIN PRODUCT P ON(P.PRODUCT_PRICE BETWEEN PRICE_MIN AND PRICE_MAX)
		JOIN MODEL M ON(P.REF_MODEL_NO = M.MODEL_NO)
		JOIN BRAND B ON(M.REF_BRAND_NO = B.BRAND_NO)
		WHERE P.STATUS LIKE 'Y'
		AND P.REF_TYPE_NO LIKE #{typeNo}
        <if test="brandNo != 0">
			AND B.BRAND_NO LIKE #{brandNo}
		</if>
        <if test="modelNo != null">
	        AND M.MODEL_NO IN 
			<foreach collection="modelNo" item="modelNo" open="(" close=")" separator=",">
				#{modelNo}
			</foreach>
        </if>
		GROUP BY 
		PRICE_NO ,
		PRICE_MIN ,
		PRICE_MAX
		ORDER BY PRICE_NO DESC
	</select>
</mapper>