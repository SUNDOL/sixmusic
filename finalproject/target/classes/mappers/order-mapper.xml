<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="orderMapper">
<!-- cart -->
<resultMap type="cart" id="cartResult">
	<result column="CART_NO" property="cartNo"/>
	<result column="REF_MEMBER_NO" property="memberNo"/>
	<result column="PRODUCT_NO" property="productNo"/>
	<result column="REF_PRODUCT_NO" property="refProductNo"/>
	<result column="QUANTITY" property="quantity"/>
	<result column="PRODUCT_PRICE" property="price"/>
	<result column="PRODUCT_ATTACHMENT_FILE_PATH" property="filePath"/>
	<result column="PRODUCT_ATTACHMENT_CHANGE_NAME" property="changeName"/>
</resultMap>
<!-- product -->
<resultMap type="product" id="productResult">
	<result column="PRODUCT_NO" property="productNo"/>
	<result column="PRODUCT_PRICE" property="price"/>
	<result column="PRODUCT_QUANTITY" property="quantity"/>
</resultMap>
<!-- productAttachment -->
<resultMap type="productAttachment" id="productAttachmentResult">
	<result column="REF_PRODUCT_NO" property="productNo"/>
	<result column="PRODUCT_ATTACHMENT_CHANGE_NAME" property="changeName"/>
	<result column="PRODUCT_ATTACHMENT_CHANGE_NAME" property="changeName"/>
	<result column="PRODUCT_ATTACHMENT_FILE_PATH" property="filePath"/>
</resultMap>

<!-- 장바구니에 이미 담겨있는지 없는지 확인 -->
<select id="checkCart" parameterType="cart" resultType="_int">
SELECT
    COUNT(*)
FROM
    cart
WHERE
        ref_member_no = #{memberNo}
    AND ref_product_no = #{productNo}
</select>

<!-- 장바구니 추가 -->
<insert id="addToCart" parameterType="cart">
INSERT INTO cart (
    cart_no,
    ref_member_no,
    ref_product_no,
    quantity
) VALUES (
    seq_cart.NEXTVAL,
    #{memberNo},
    #{productNo},
    #{quantity}
)
</insert>

<!-- 장바구니에 담긴 목록 Cart에 출력 -->
<select id="showCart" parameterType="cart" resultMap="cartResult">
SELECT
    p.product_no,
    p.product_price,
    pat.product_attachment_file_path,
    pat.product_attachment_change_name
FROM
         product p
    JOIN product_attachment pat ON ( p.product_no = pat.ref_product_no )
    JOIN cart               c ON ( p.product_no = c.ref_product_no )
WHERE
    c.ref_member_no LIKE #{memberNo}
    AND pat.product_attachment_change_name LIKE '%-1.%'
ORDER BY
    c.cart_no DESC
</select>

<!-- 사용자의 장바구니 정보 출력 -->
<select id="selectCartProduct" parameterType="_int" resultMap="productResult">
	SELECT
	P.PRODUCT_NO,
	P.PRODUCT_PRICE
	FROM PRODUCT P
	JOIN CART C ON(C.CART_NO = P.PRODUCT_NO)
	WHERE CT.REF_MEMBER_NO = #{memberNo}
	ORDER BY C.CART_NO DESC
</select>

<!-- 주문할 상품의 정보 -->
<select id="seletOrderProduct" resultMap="productResult">
	SELECT
		P.PRODUCT_NAME ,
		P.PRODUCT_PRICE ,
		C.QUANTITY AS PRODUCT_QUANTITY 
	FROM PRODUCT
    JOIN CART C ON(P.PRODUCT_NO=C.REF_PRODUCT_NO)
	WHERE CART_NO IN
	<foreach collection="array" item="cartNo" open="(" close=")" separator=",">
	 	#{cartNo}
	</foreach>
    ORDER BY P.PRODUCT_PRICE DESC
</select>

<!-- 즐겨찾기에 보여질 상품 사진 -->
<select id="selectWishlistAttachment" parameterType="_int">
	SELECT
		MIN(PA.PRODUCT_ATTACHMENT_NO) ,
		PA.REF_PRODUCT_NO ,
		PA.PRODUCT_ATTACHMENT_ORIGIN_NAME ,
		PA.PRODUCT_ATTACHMENT_CHANGE_NAME ,
		PA.PRODUCT_ATTACHMENT_FILE_PATH 
	FROM PRODUCT_ATTACHMENT PA
	JOIN WISHLIST W ON(W.REF_PRODUCT_NO = PA.REF_PRODUCT_NO)
	WHERE W.REF_MEMBER_NO LIKE #{memberNo}
	GROUP BY 
		PA.REF_PRODUCT_NO ,
		PA.PRODUCT_ATTACHMENT_ORIGIN_NAME ,
		PA.PRODUCT_ATTACHMENT_CHANGE_NAME ,
		PA.PRODUCT_ATTACHMENT_FILE_PATH 
	ORDER BY W.REF_PRODUCT_NO DESC
</select>
<!-- 장바구니에 보여질 상품 사진 -->
<select id="selectCartAttachment" parameterType="_int" resultMap="productAttachmentResult">
	SELECT 
		MIN(PA.PRODUCT_ATTACHMENT_NO),
		PA.REF_PRODUCT_NO ,
		PA.PRODUCT_ATTACHMENT_ORIGIN_NAME,
		PA.PRODUCT_ATTACHMENT_CHANGE_NAME ,
		PA.PRODUCT_ATTACHMENT_FILE_PATH
	FROM PRODUCT_ATTACHMENT PA
	JOIN CART C ON(C.REF_PRODUCT_NO=PA.REF_PRODUCT_NO)
	WHERE C.REF_MEMBER_NO LIKE #{memberNo}
	GROUP BY 
		PA.REF_PRODUCT_NO ,
		PA.PRODUCT_ATTACHMENT_ORIGIN_NAME,
		PA.PRODUCT_ATTACHMENT_CHANGE_NAME ,
		PA.PRODUCT_ATTACHMENT_FILE_PATH
	ORDER BY C.CART_NO DESC
</select>
<!-- totalOrder -->
<!-- 주문정보에 데이터를 입력 -->
<insert id="insertTotalOrder" parameterType="totalOrder">
	INSERT INTO TOTAL_ORDER(
	    ORDER_NO ,
		REF_MEMBER_NO ,
		PAYMENT
		)
	VALUES(
		SEQ_ORDER.NEXTVAL,
		#{memberNo},
		#{payment}
	)
</insert>
<update id="updateTotalOrder" parameterType="_int">
	UPDATE TOTAL_ORDER
	SET STATUS = 'Y'
	WHERE STATUS LIKE 'N'
	AND REF_MEMBER_NO LIKE #{memberNo}
	AND ORDER_DATE LIKE (
		SELECT MAX(ORDER_DATE) 
		FROM TOTAL_ORDER 
		WHERE REF_MEMBER_NO LIKE #{memberNo}
	)
</update>
<delete id="deleteTotalOrder" parameterType="_int">
	DELETE FORM  TOTAL_ORDER
	WHERE STATUS LIKE 'N'
	AND REF_MEMBER_NO LIKE #{memberNo}
</delete>
<!-- 결제할 주문정보에 주문번호 -->
<select id="selectOrderNo" parameterType="_int" resultType="_int">
	SELECT ORDER_NO
	FROM (
		SELECT ORDER_NO
		FROM TOTAL_ORDER
		WHERE STATUS LIKE 'N'
		AND REF_MEMBER_NO LIKE #{memberNo}
		ORDER BY ORDER_DATE DESC
		)
	WHERE ROWNUM = 1
</select>
<!-- wishlist -->
<insert id="insertWishlist" parameterType="wishlist">
	INSERT INTO WISHLIST(
		REF_MEMBER_NO, 
		REF_PRODUCT_NO
	)
	VALUES(
		#{memberNo},
		#{productNo}
	)
</insert>
<delete id="deleteWishlist"  parameterType="wishlist">
	DELETE FROM WISHLIST
	WHERE REF_MEMBER_NO LIKE #{memberNo}
	AND REF_PRODUCT_NO LIKE #{productNo}
</delete>



<!-- 장바구니 삭제 -->
<delete id="deleteCart" parameterType="_int">
	DELETE FROM CART
	WHERE CART_NO LIKE #{cartNo}
</delete>
<!-- 주문할 장바구니에 담긴 정보 -->
<select id="selectOrderCart" resultMap="cartResult">
	SELECT
		CART_NO ,
		REF_MEMBER_NO ,
		REF_PRODUCT_NO ,
		QUANTITY 
	FROM CART
	WHERE CART_NO IN
	<foreach collection="array" item="cartNo" open="(" close=")" separator=",">
	 	#{cartNo}
	</foreach>
</select>
<delete id="deleteOrderCart" parameterType="_int">
	DELETE FROM CART
	WHERE REF_MEMBER_NO LIKE #{memberNo}
</delete>
<!-- productOrder -->
<resultMap type="productOrder" id="productOrderResult">
	<result column="REF_ORDER_NO" property="orderNo"/>
	<result column="REF_PRODUCT_NO" property="productNo"/>
	<result column="QUANTITY" property="quantity"/>
</resultMap>

<!-- 주문내역정보 입력 -->
<select id="insertProductOrder" parameterType="ArrayList" resultMap="productOrderResult">
	INSERT INTO PRODUCT_ORDER(
		REF_ORDER_NO ,
		REF_PRODUCT_NO ,
		QUANTITY
	)
	VALUES
	<foreach item="po" index="index" collection="list">
	(
		 #{po.orderNo}
		 ,#{po.productNo}
		 ,#{po.quantity}
	)
	</foreach>
</select>
<delete id="deleteProductOrder" parameterType="_int">
	DELETE FROM PRODUCT_ORDER
	WHERE  REF_ORDER_NO IN(
		SELECT ORDER_NO
		FROM TOTAL_ORDER 
		WHERE STATUS LIKE 'N'
		AND REF_MEMBER_NO LIKE #{memberNo}
	)
</delete>
</mapper>
