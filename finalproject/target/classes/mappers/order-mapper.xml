<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="orderMapper">
<!-- cart -->
<resultMap type="cart" id="cartResult">
	<result column="CART_NO" property="cartNo"/>
	<result column="REF_MEMBER_NO" property="memberNo"/>
	<result column="PRODUCT_NO" property="productNo"/>
	<result column="QUANTITY" property="quantity"/>
	<result column="PRODUCT_PRICE" property="price"/>
	<result column="PRODUCT_ATTACHMENT_FILE_PATH" property="filePath"/>
	<result column="PRODUCT_ATTACHMENT_CHANGE_NAME" property="changeName"/>
</resultMap>
<!-- product -->
<resultMap type="product" id="productResult">
	<result column="PRODUCT_NO" property="productNo"/>
	<result column="BRAND_NAME" property="brand"/>
	<result column="PRODUCT_NAME" property="name"/>
	<result column="PRODUCT_COLOR" property="color"/>
	<result column="PRODUCT_PRICE" property="price"/>
	<result column="PRODUCT_QUANTITY" property="quantity"/>
	<result column="CHANGE_NAME" property="changeName"/>
	<result column="FILE_PATH" property="filePath"/>
</resultMap>

<!-- cart -->

<!-- 장바구니에 이미 담겨있는지 없는지 확인 -->
<select id="checkCart" parameterType="cart" resultType="_int">
SELECT
    COUNT(*)
FROM
    cart
WHERE
        ref_member_no = #{memberNo}
    AND ref_product_no = #{productNo}
</select>

<!-- 장바구니 추가 -->
<insert id="addToCart" parameterType="cart">
INSERT INTO cart (
    cart_no,
    ref_member_no,
    ref_product_no,
    quantity
) VALUES (
    seq_cart.NEXTVAL,
    #{memberNo},
    #{productNo},
    #{quantity}
)
</insert>

<!-- 장바구니에 담긴 목록 Cart에 출력 -->
<select id="showCart" parameterType="cart" resultMap="cartResult">
SELECT
	c.cart_no,
    p.product_no,
    p.product_price,
    pat.product_attachment_file_path,
    pat.product_attachment_change_name
FROM
         product p
    JOIN product_attachment pat ON ( p.product_no = pat.ref_product_no )
    JOIN cart               c ON ( p.product_no = c.ref_product_no )
WHERE
    c.ref_member_no LIKE #{memberNo}
    AND pat.product_attachment_change_name LIKE '%-1.%'
ORDER BY
    c.cart_no DESC
</select>

<!-- 장바구니 삭제 -->
<delete id="removeCart" parameterType="_int">
	DELETE FROM CART
	WHERE CART_NO LIKE #{cartNo}
</delete>

<!-- wishlist -->

<!-- 관심상품 중복확인 -->
<select id="checkWishlist" parameterType="wishlist" resultType="_int">
	SELECT COUNT(*)
	FROM WISHLIST
	WHERE REF_MEMBER_NO LIKE #{memberNo}
	AND REF_PRODUCT_NO LIKE #{productNo}
</select>

<!-- 관심상품 추가 -->
<insert id="addToWishlist" parameterType="wishlist" >
	INSERT INTO WISHLIST(
		REF_MEMBER_NO, 
		REF_PRODUCT_NO
	)
	VALUES(
		#{memberNo},
		#{productNo}
	)
</insert>

<!-- Wishlist 목록 출력  -->
<select id="showWishlist" parameterType="_int" resultMap="productResult">
	SELECT
		P.PRODUCT_NO,
		PAT.PRODUCT_ATTACHMENT_CHANGE_NAME CHANGE_NAME,
		PAT.PRODUCT_ATTACHMENT_FILE_PATH FILE_PATH
	FROM PRODUCT_ATTACHMENT PAT
    JOIN PRODUCT P ON(P.PRODUCT_NO = PAT.REF_PRODUCT_NO)
	JOIN WISHLIST W ON(W.REF_PRODUCT_NO = PAT.REF_PRODUCT_NO)
	WHERE W.REF_MEMBER_NO LIKE #{memberNo}
    AND  PAT.PRODUCT_ATTACHMENT_CHANGE_NAME LIKE '%-1.%'
</select>

<!-- 관심상품 삭제 -->
<delete id="removeWishlist"  parameterType="wishlist">
	DELETE FROM WISHLIST
	WHERE REF_MEMBER_NO LIKE #{memberNo}
	AND REF_PRODUCT_NO LIKE #{productNo}
</delete>

<!-- confirmation -->
<select id="showConfirmationInfo" parameterType="_int" resultMap="productResult">
SELECT
    c.cart_no PRODUCT_NO,
    b.brand_name,
    m.model_name,
    p.product_name,
    p.product_color,
    p.product_price,
    pat.product_attachment_file_path FILE_PATH,
    pat.product_attachment_change_name CHANGE_NAME
FROM
         product p
    JOIN product_attachment pat ON ( p.product_no = pat.ref_product_no )
    JOIN cart               c ON ( p.product_no = c.ref_product_no )
    JOIN model              m ON ( m.model_no = p.ref_model_no )
    JOIN brand              b ON ( m.ref_brand_no = b.brand_no )
WHERE
    c.ref_member_no LIKE #{memberNo}
    AND pat.product_attachment_change_name LIKE '%-1.%'
ORDER BY
    c.cart_no DESC
</select>

<!-- 구매 시 -->
<select id="selectOrderCart" parameterType="_int">
	SELECT 
		SUM(P.PRODUCT_PRICE * C.QUANTITY) PRODUCT_PRICE,
		SUM(C.QUANTITY) QUANTITY,
		MAX(P.PRODUCT_NAME) PRODUCT_NAME
	FROM CART C
	JOIN PRODUCT P ON(C.REF_PRODUCT_NO = P.PRODUCT_NO)
	WHERE C.REF_MEMBER_NO LIKE #{memberNo}
	GROUP BY C.REF_MEMBER_NO;
</select>

<!-- 구매 성공시 -->
<insert id="insertTotalOrder" parameterType="_int">
	INSERT INTO TOTAL_ORDER(ORDER_NO, PAYMENT, REF_MEMBER_NO)
	SELECT SEQ_ORDER.NEXTVAL ORDER_NO,A.*
	FROM
	    (
	    SELECT 
	    SUM(P.PRODUCT_PRICE) PAYMENT,
	    C.REF_MEMBER_NO REF_MEMBER_NO
	    FROM CART C
	    JOIN PRODUCT P ON(C.REF_PRODUCT_NO = P.PRODUCT_NO)
	    GROUP BY C.REF_MEMBER_NO
	    )A
	WHERE A.REF_MEMBER_NO LIKE #{memberNo}
</insert>

<insert id="insertPoudctOrder" parameterType="_int">
	INSERT INTO PRODUCT_ORDER(REF_ORDER_NO, REF_PRODUCT_NO, QUANTITY)
	SELECT
		SEQ_ORDER.CURRVAL REF_ORDER_NO,
		REF_PRODUCT_NO ,
		QUANTITY 
	FROM CART
	WHERE REF_MEMBER_NO LIKE #{memberNo}
</insert>

<update id="updateProductQuantity" parameterType="_int">
	UPDATE PRODUCT
	SET PRODUCT_QUANTITY = PRODUCT_QUANTITY - 1
	WHERE PRODUCT_NO IN
		(
		SELECT REF_PRODUCT_NO 
		FROM CART 
		WHERE REF_MEMBER_NO LIKE #{memberNo}
		)
</update>

<delete id="deleteCart" parameterType="_int">
	DELETE FROM CART
	WHERE REF_MEMBER_NO LIKE #{memberNo}
</delete>
<!-- 구매 취소시 -->

<update id="cancelOrder" parameterType="totalOrder">
	UPDATE TOTAL_ORDER
	SET STATUS = 'C'
	WHERE ORDER_NO LIKE #{orderNo}
	AND REF_MEMBER_NO LIKE #{memberNo}
	AND STATUS LIKE 'Y'
</update>

<delete id="deleteProductOrder" parameterType="_int">
	DELETE FROM PRODUCT_ORDER PO
	WHERE PO.REF_ORDER_NO IN 
	(
		SELECT O.ORDER_NO
		FROM TOTAL_ORDER O
		WHERE O.STATUS LIKE 'N'
		AND O.REF_MEMBER_NO LIKE #{memberNo}
	)
	OR PO.REF_ORDER_NO NOT IN
	(
		SELECT O.ORDER_NO FROM TOTAL_ORDER O
	)
</delete>

<delete id="deleteTotalOrder" parameterType="_int">
	DELETE FROM TOTAL_ORDER O
	WHERE O.STATUS LIKE 'N'
	AND O.REF_MEMBER_NO LIKE #{memberNo}
</delete>



</mapper>
